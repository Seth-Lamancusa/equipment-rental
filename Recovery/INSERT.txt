-- Table: CUST_ORDER
CREATE TABLE IF NOT EXISTS CUST_ORDER (
    Order_Num char(8) not null,
    Value int,
    Date date,
    Return_Date date,
    Return_Status int, --1 if returned, 0 if not
    Model_Num char(8) not null,
    Serial_Num char(8) not null,
    User_Id char(8) not null,
    primary key(Order_Num),
    foreign key(Model_Num, Serial_Num) references EQUIPMENT(Model_Num, Serial_Num) ON
    UPDATE SET NULL,
    foreign key(User_Id) references MEMBER(User_Id) ON UPDATE CASCADE
);

-- Table: DRONE
CREATE TABLE IF NOT EXISTS DRONE (
    Model_Num char(8) not null,
    Serial_Num char(8) not null,
    Year char(4) not null,
    Desc varchar(50),
    Fleet_Id char(8) not null,
    Weight_Cap int,
    Volume_Cap int,
    Dist_Auth varchar(4),
    Max_Speed int,
    Status int not null, -- 1 if in use, 0 if discontinued
    Addr varchar(30) not null,
    City varchar(30) not null,
    Supp_Id char(8) not null,
    primary key(Model_Num, Serial_Num),
    foreign key(Addr, City) references WAREHOUSE(Addr, City) ON UPDATE CASCADE,
    foreign key(Supp_Id) references SUPPLIER(Supp_Id) ON UPDATE SET NULL
);

-- Table: EMPLOYEE
CREATE TABLE IF NOT EXISTS EMPLOYEE (
    Ssn char(9) not null,
    Fname varchar(15) not null,
    Lname varchar(15) not null,
    Addr varchar(30),
    Phone char(10),
    Email varchar(40),
    Salary int,
    primary key(Ssn)
);

-- Table: EQUIPMENT
CREATE TABLE IF NOT EXISTS EQUIPMENT (
    Model_Num char(8) not null,
    Serial_Num char(8) not null,
    Year char(4),
    Desc varchar(50),
    Warr_Exp date,
    Inv_Id char(8) not null,
    Type varchar(15),? Weight int,
    Arrival_Date date,
    Size varchar(2),
    Addr varchar(30) not null,
    City varchar(30) not null,
    Supp_Id char(8) not null,
    primary key(Model_Num, Serial_Num),
    foreign key(Addr, City) references WAREHOUSE(Addr, City) ON UPDATE CASCADE,
    foreign key(Supp_Id) references SUPPLIER(Supp_Id) ON UPDATE SET NULL
);

-- Table: FOR_DRONE
CREATE TABLE IF NOT EXISTS FOR_DRONE (
    Order_Num char(8) not null,
    Model_Num char(8) not null,
    Serial_Num char(8) not null,
    foreign key(Order_Num) references INV_ORDER(Order_Num) ON UPDATE CASCADE,
    foreign key(Model_Num, Serial_Num) references DRONE(Model_Num, Serial_Num) ON
    UPDATE CASCADE
);

-- Table: FOR_EQUIP
CREATE TABLE IF NOT EXISTS FOR_EQUIP (
    Order_Num char(8) not null,
    Model_Num char(8) not null,
    Serial_Num char(8) not null,
    foreign key(Order_Num) references INV_ORDER(Order_Num) ON UPDATE CASCADE,
    foreign key(Model_Num, Serial_Num) references EQUIPMENT(Model_Num, Serial_Num) ON
    UPDATE CASCADE
);

-- Table: INV_ORDER
CREATE TABLE IF NOT EXISTS INV_ORDER (
    Order_Num char(8) not null,
    Value int,
    Order_Date date,
    Est_DOA date,
    Num_Items int,
    Type varchar(15),
    Ssn char(9) not null,
    primary key(Order_Num),
    foreign key(Ssn) references EMPLOYEE(Ssn) ON UPDATE SET NULL
);

-- Table: MEMBER
CREATE TABLE IF NOT EXISTS MEMBER (
    User_Id char(8) not null,
    Fname varchar(15) not null,
    Lname varchar(15) not null,
    Addr varchar(30),
    Phone char(10),
    Email varchar(40),
    Start_Date date,
    Credit_Card char(16),
    primary key(User_Id)
);

-- Table: REVIEW
CREATE TABLE IF NOT EXISTS REVIEW (
    Review_Id char(8) not null,
    Rating char(1),
    Text varchar(255),
    User_Id char(8) not null,
    Model_Num char(8),
    Serial_Num char(8),
    primary key(Review_Id),
    foreign key(User_Id) references MEMBER(User_Id) ON UPDATE SET NULL,
    foreign key(Model_Num, Serial_Num) references EQUIPMENT(Model_Num, Serial_Num) ON UPDATE CASCADE
);

-- Table: SUPPLIER
CREATE TABLE IF NOT EXISTS SUPPLIER (
    Supp_Id char(8) not null,
    Name varchar(30) not null,
    Addr varchar(30),
    City varchar(30),
    primary key(Supp_Id)
);

-- Table: WAREHOUSE
CREATE TABLE IF NOT EXISTS WAREHOUSE (
    Addr varchar(30) not null,
    City varchar(30) not null,
    Mgr_Fname varchar(15),
    Mgr_Lname varchar(15),
    Phone char(10),
    Equip_Cap int,
    Drone_Cap int,
    primary key(Addr, City)
);
